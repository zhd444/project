一、核心数学基础

1.1 椭圆曲线基础

曲线方程：SM2 采用的椭圆曲线方程为$$y^{2}=x^{3}+ax + b$$，定义在有限域$$\mathbb{F}_{q}$$上，其中$$q$$为素数（文档中给定$$q = 0x8542D69E4C044F18E8B92435BF6FF7DE457283915C45517D722EDB8B08F1DFC3$$ ）。

点运算特性：曲线上的点对 “加法” 和 “数乘” 运算封闭，满足交换律和结合律。利用该特性可实现密钥生成与加密签名的核心逻辑，例如点乘运算$$kP$$（$$k$$为标量，$$P$$为曲线上的点）。

1.2 有限域与参数

有限域：包含$$q$$个元素的集合，支持加减乘除运算（除零外），是椭圆曲线定义的基础。

系统参数：SM2 定义了一组固定参数，包括曲线参数$$a, b$$ 、基点$$G$$ 、阶$$n$$ 、余因子$$h$$等，所有运算均基于这些参数展开。

二、核心功能流程

2.1 签名与验证

签名生成（Sign）：

预处理：计算$$Z_A = H_{256}(ENTL_A\parallel ID_A\parallel a\parallel b\parallel x_G\parallel y_G\parallel x_A\parallel y_A)$$。

计算哈希：$$e = H(Z_A\parallel M)$$，生成随机数$$k$$，计算$$kG = (x_1, y_1)$$。

计算签名：$$r = (e + x_1)\bmod n$$，$$s = [(1 + d_A)^{-1}\cdot(k - r\cdot d_A)]\bmod n$$，输出$$(r, s)$$。

签名验证（Verify）：

校验$$r, s$$范围，计算$$t = (r + s)\bmod n$$。

计算$$sG + tP_A = (x_1', y_1')$$，验证$$(e + x_1')\bmod n = r$$。

2.2 加密与解密

加密（Encrypt）：

生成随机数$$k$$，计算$$C_1 = kG$$、$$kP_B = (x_2, y_2)$$。

派生密钥$$t = KDF(x_2\parallel y_2, klen)$$，计算$$C_2 = M\oplus t$$、$$C_3 = Hash(x_2\parallel M\parallel y_2)$$，输出$$C = C_1\parallel C_2\parallel C_3$$。

解密（Decrypt）：

计算$$d_B C_1 = (x_2, y_2)$$，派生$$t = KDF(x_2\parallel y_2, klen)$$。

解密得$$M' = C_2\oplus t$$，验证$$Hash(x_2\parallel M'\parallel y_2) = C_3$$。

三、安全漏洞分析

3.1 随机数$$k$$泄露

风险：若签名过程中随机数$$k$$泄露，攻击者可通过公式$$d_A = (s + r)^{-1}\cdot(k - s)\bmod n$$推导私钥$$d_A$$。

案例：重复使用$$k$$对不同消息签名时，攻击者可联立两个签名方程求解私钥。

3.2 多用户密钥泄露

风险：不同用户若使用相同$$k$$签名，可相互推导对方私钥，例如 Alice 可通过 Bob 的签名计算$$d_B = (k - s_2)\cdot(s_2 + r_2)^{-1}\bmod n$$。

3.3 与 ECDSA 兼容性风险

风险：同一私钥$$d$$和随机数$$k$$若同时用于 SM2 和 ECDSA 签名，攻击者可通过联立两种算法的签名公式破解私钥。 
